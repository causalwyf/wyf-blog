<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://causalwyf.github.io/wyf-blog/</id>
    <title>王同学的四次元口袋</title>
    <updated>2021-11-15T06:11:20.782Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://causalwyf.github.io/wyf-blog/"/>
    <link rel="self" href="https://causalwyf.github.io/wyf-blog/atom.xml"/>
    <subtitle>慢慢学习，慢慢输出。</subtitle>
    <logo>https://causalwyf.github.io/wyf-blog/images/avatar.png</logo>
    <icon>https://causalwyf.github.io/wyf-blog/favicon.ico</icon>
    <rights>All rights reserved 2021, 王同学的四次元口袋</rights>
    <entry>
        <title type="html"><![CDATA[C语言]]></title>
        <id>https://causalwyf.github.io/wyf-blog/post/c-yu-yan/</id>
        <link href="https://causalwyf.github.io/wyf-blog/post/c-yu-yan/">
        </link>
        <updated>2021-11-15T05:19:43.000Z</updated>
        <content type="html"><![CDATA[<p>👀<strong>C语言之从小白到专家（王同学有毒啊出品）</strong></p>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#%E7%AC%AC%E4%B8%80%E7%AB%A0-c%E8%AF%AD%E8%A8%80%E7%9A%84%E7%AE%80%E4%BB%8B">第一章 C语言的简介</a>
<ul>
<li><a href="#11c%E8%AF%AD%E8%A8%80%E7%9A%84%E8%B5%B7%E6%BA%90%E4%B8%8E%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2">1.1C语言的起源与发展历史</a></li>
<li><a href="#12c%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BA%94%E7%94%A8%E5%8F%8A%E5%85%B6%E4%BC%98%E7%BC%BA%E7%82%B9">1.2C语言的应用及其优缺点</a>
<ul>
<li><a href="#121c%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BA%94%E7%94%A8%E6%9C%89%E5%93%AA%E4%BA%9B">1.2.1C语言的应用有哪些？</a></li>
<li><a href="#1%E7%B3%BB%E7%BB%9F%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91">（1）系统应用开发</a></li>
<li><a href="#2%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91">（2）软件应用开发</a></li>
<li><a href="#122%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E4%B9%A0c%E8%AF%AD%E8%A8%80">1.2.2为什么要学习C语言？</a></li>
<li><a href="#123c%E8%AF%AD%E8%A8%80%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E5%88%86%E5%88%AB%E6%9C%89%E5%93%AA%E4%BA%9B">1.2.3C语言的优缺点分别有哪些？</a></li>
<li><a href="#1%E4%BC%98%E7%82%B9">（1）优点</a></li>
<li><a href="#2%E7%BC%BA%E7%82%B9">（2）缺点</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#%E7%AC%AC%E4%BA%8C%E7%AB%A0-c%E8%AF%AD%E8%A8%80%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">第二章 C语言的基本概念</a></li>
<li></li>
<li></li>
</ul>
</li>
</ul>
</p>
<h2 id="第一章-c语言的简介">第一章 C语言的简介</h2>
<h3 id="11c语言的起源与发展历史">1.1C语言的起源与发展历史</h3>
<h3 id="12c语言的应用及其优缺点">1.2C语言的应用及其优缺点</h3>
<h4 id="121c语言的应用有哪些">1.2.1C语言的应用有哪些？</h4>
<p>C语言的应用领域分两大块：系统软件开发和应用软件开发。其中C语言最主要用于编写系统软件，编写应用软件不是它的强项。</p>
<h4 id="1系统应用开发">（1）系统应用开发</h4>
<ol>
<li>
<p>操作系统：UNIX、Windows、Linux。</p>
</li>
<li>
<p>驱动程序：比如主板驱动、显卡驱动、摄像头驱动。驱动一般是用C语言和<a href="http://c.biancheng.net/asm/">汇编语言</a>写的，<a href="http://c.biancheng.net/cplus/">C++</a> 在这方面稍弱。</p>
</li>
<li>
<p>数据库：SQL Server、Oracle、<a href="http://c.biancheng.net/mysql/">MySQL</a>、DB2。</p>
</li>
</ol>
<h4 id="2软件应用开发">（2）软件应用开发</h4>
<ul>
<li>办公软件：WPS。</li>
<li>图形图像多媒体：Photoshop、Mediaplayer。</li>
<li>嵌入式软件开发：嵌入式软件开发说得简单点就是芯片编程，比如我们以后学习在单片机和 ARM 上进行的开发都属于嵌入式软件开发。</li>
<li>游戏开发：2D、3D 游戏。CS 整个游戏的引擎全部是用纯C写的。</li>
</ul>
<h4 id="122为什么要学习c语言">1.2.2为什么要学习C语言？</h4>
<p>第一，学习C有助于更好地理解C++、Java、C#、Perl以及其他基于C的语言的特性，一开始就学习其他语言的程序员往往不能很好地掌握继承自C语言的基本特性；</p>
<p>第二，目前仍有许多C程序，我们需要读懂并维护这些代码；</p>
<p>第三，C语言仍然广泛用于新软件开发，特别是在内存或处理能力受限的情况下以及需要使用C语言简单特性的地方。</p>
<h4 id="123c语言的优缺点分别有哪些">1.2.3C语言的优缺点分别有哪些？</h4>
<h4 id="1优点">（1）优点</h4>
<p>高效 。高效性是C语言与生俱来的优点之一。发明C语言就是为了编写那些以往由汇编语言编写的应用程序，所以对C语言来说，能够在有限的内存空间里快速运行就显得至关重要了。</p>
<p>可移植 。虽然程序的可移植性并不是C语言的主要目标，但它还是成为了C语言的优点之一。当程序必须在多种机型（从个人计算机到超级计算机）上运行时，常常会用C语言来编写。C程序具有可移植性的一个原因是该语言没有分裂成不兼容的多种分支（这要归功于C语言早期与UNIX系统的结合以及后来的ANSI/ISO标准）。另一个原因是C语言编译器规模小且容易编写，这使得它们得以广泛应用。最后，C语言自身的特性也支持可移植性（尽管它没有阻止程序员编写不可移植的程序）。</p>
<p>功能强大 。C语言拥有一个庞大的数据类型和运算符集合，这个集合使得C语言具有强大的表达能力，往往寥寥几行代码就可以实现许多功能。</p>
<p>灵活 。虽然C语言最初设计是为了系统编程，但是没有固有的约束将它限制在此范围内。C语言现在可以用于编写从嵌入式系统到商业数据处理的各种应用程序。此外，C语言在其特性使用上的限制非常少。在其他语言中认定为非法的操作在C语言中往往是允许的。例如，C语言允许一个字符与一个整数值相加（或者是与一个浮点数相加）。虽然灵活性可能会让某些错误溜掉，但是它却使<br>
编程变得更加轻松。</p>
<p>标准库 。C语言的一个突出优点就是它具有标准库，该标准库包含了数百个可以用于输入/输出、字符串处理、存储分配以及其他实用操作的函数。</p>
<p>与UNIX系统的集成 。C语言在与UNIX系统（包括广为人知的Linux）结合方面特别强大。事实上，一些UNIX工具甚至假定用户是了解C语言的。</p>
<h4 id="2缺点">（2）缺点</h4>
<p>C语言的缺点和它的许多优点是同源的，均来自C语言与机器的紧密结合。下面是众所周知的几个问题。</p>
<p>C程序更容易隐藏错误 。C语言的灵活性使得用它编程出错的概率较高。在用其他语言编程时可以发现的错误，C语言编译器却无法检查到。从这方面来说，C语言与汇编语言极为相似，后者直到程序运行时才能检查到大多数错误。更糟的是，C语言还包含大量不易觉察的隐患。在后续的章节中我们将会看到，一个额外的分号可能会导致无限循环，遗漏一个&amp; 可能会引发程序崩溃。</p>
<p>C程序可能会难以理解 。虽然根据大多数衡量标准C语言是一种小型语言，但是它也有许多其他通用语言没有的特性（并且常常被误解）。这些特性可以用多种方式结合使用，其中的一些结合方式尽管编程者心知肚明，但是其他人恐怕难以理解。另一个问题就是C程序简明扼要的特性。C语言产生的时候正是人机交互最为单调乏味的时期，因此设计者特意使C语言简明以便将录入和编辑程序的用时减到最少。C语言的灵活性也可能是一个负面因素，过于聪明的程序员甚至可以编写出除了他们自己几乎没人可以读得懂的程序。</p>
<p>C程序可能会难以修改 。如果在设计中没有考虑到维护的问题，那么用C语言编写的大规模程序将很难修改。现代的编程语言通常都会提供“类”和“包”之类的语言特性，这样的特性可以把大的程序分解成许多更容易管理的模块。遗憾的是，C语言恰恰缺少这样的特性。</p>
<h2 id="第二章-c语言的基本概念">第二章 C语言的基本概念</h2>
<h2 id=""></h2>
<h2 id="-2"></h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[哈哈哈哈]]></title>
        <id>https://causalwyf.github.io/wyf-blog/post/ha-ha-ha-ha/</id>
        <link href="https://causalwyf.github.io/wyf-blog/post/ha-ha-ha-ha/">
        </link>
        <updated>2021-11-15T03:50:18.000Z</updated>
        <content type="html"><![CDATA[<p>😀<img src="https://causalwyf.github.io/wyf-blog//post-images/1636948249827.jpg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://causalwyf.github.io/wyf-blog/post/hello-gridea/</id>
        <link href="https://causalwyf.github.io/wyf-blog/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>